/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JItem;
import org.jooq.generated.tables.pojos.Item;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemRecord extends UpdatableRecordImpl<ItemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_study.item.item_id</code>.
     */
    public ItemRecord setItemId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.item_id</code>.
     */
    public Long getItemId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq_study.item.item_name</code>.
     */
    public ItemRecord setItemName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.item_name</code>.
     */
    public String getItemName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq_study.item.item_price</code>.
     */
    public ItemRecord setItemPrice(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.item_price</code>.
     */
    public Long getItemPrice() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>jooq_study.item.discount_price</code>.
     */
    public ItemRecord setDiscountPrice(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.discount_price</code>.
     */
    public String getDiscountPrice() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq_study.item.total_quantity</code>.
     */
    public ItemRecord setTotalQuantity(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.total_quantity</code>.
     */
    public Long getTotalQuantity() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>jooq_study.item.discount_date</code>.
     */
    public ItemRecord setDiscountDate(LocalDate value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.discount_date</code>.
     */
    public LocalDate getDiscountDate() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>jooq_study.item.created_at</code>.
     */
    public ItemRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>jooq_study.item.last_modified_at</code>.
     */
    public ItemRecord setLastModifiedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.item.last_modified_at</code>.
     */
    public LocalDateTime getLastModifiedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemRecord
     */
    public ItemRecord() {
        super(JItem.ITEM);
    }

    /**
     * Create a detached, initialised ItemRecord
     */
    public ItemRecord(Long itemId, String itemName, Long itemPrice, String discountPrice, Long totalQuantity, LocalDate discountDate, LocalDateTime createdAt, LocalDateTime lastModifiedAt) {
        super(JItem.ITEM);

        setItemId(itemId);
        setItemName(itemName);
        setItemPrice(itemPrice);
        setDiscountPrice(discountPrice);
        setTotalQuantity(totalQuantity);
        setDiscountDate(discountDate);
        setCreatedAt(createdAt);
        setLastModifiedAt(lastModifiedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ItemRecord
     */
    public ItemRecord(Item value) {
        super(JItem.ITEM);

        if (value != null) {
            setItemId(value.getItemId());
            setItemName(value.getItemName());
            setItemPrice(value.getItemPrice());
            setDiscountPrice(value.getDiscountPrice());
            setTotalQuantity(value.getTotalQuantity());
            setDiscountDate(value.getDiscountDate());
            setCreatedAt(value.getCreatedAt());
            setLastModifiedAt(value.getLastModifiedAt());
            resetChangedOnNotNull();
        }
    }
}
