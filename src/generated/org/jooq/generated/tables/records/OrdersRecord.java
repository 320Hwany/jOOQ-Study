/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JOrders;
import org.jooq.generated.tables.pojos.Orders;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_study.orders.order_id</code>.
     */
    public OrdersRecord setOrderId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.orders.order_id</code>.
     */
    public Long getOrderId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq_study.orders.member_id</code>.
     */
    public OrdersRecord setMemberId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.orders.member_id</code>.
     */
    public Long getMemberId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>jooq_study.orders.item_id</code>.
     */
    public OrdersRecord setItemId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.orders.item_id</code>.
     */
    public Long getItemId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>jooq_study.orders.item_quantity</code>.
     */
    public OrdersRecord setItemQuantity(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.orders.item_quantity</code>.
     */
    public Long getItemQuantity() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>jooq_study.orders.order_status</code>.
     */
    public OrdersRecord setOrderStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.orders.order_status</code>.
     */
    public String getOrderStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>jooq_study.orders.created_at</code>.
     */
    public OrdersRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.orders.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>jooq_study.orders.last_modified_at</code>.
     */
    public OrdersRecord setLastModifiedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>jooq_study.orders.last_modified_at</code>.
     */
    public LocalDateTime getLastModifiedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(JOrders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Long orderId, Long memberId, Long itemId, Long itemQuantity, String orderStatus, LocalDateTime createdAt, LocalDateTime lastModifiedAt) {
        super(JOrders.ORDERS);

        setOrderId(orderId);
        setMemberId(memberId);
        setItemId(itemId);
        setItemQuantity(itemQuantity);
        setOrderStatus(orderStatus);
        setCreatedAt(createdAt);
        setLastModifiedAt(lastModifiedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Orders value) {
        super(JOrders.ORDERS);

        if (value != null) {
            setOrderId(value.getOrderId());
            setMemberId(value.getMemberId());
            setItemId(value.getItemId());
            setItemQuantity(value.getItemQuantity());
            setOrderStatus(value.getOrderStatus());
            setCreatedAt(value.getCreatedAt());
            setLastModifiedAt(value.getLastModifiedAt());
            resetChangedOnNotNull();
        }
    }
}
