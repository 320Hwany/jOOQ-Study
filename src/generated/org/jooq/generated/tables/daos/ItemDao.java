/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JItem;
import org.jooq.generated.tables.pojos.Item;
import org.jooq.generated.tables.records.ItemRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemDao extends DAOImpl<ItemRecord, Item, Long> {

    /**
     * Create a new ItemDao without any configuration
     */
    public ItemDao() {
        super(JItem.ITEM, Item.class);
    }

    /**
     * Create a new ItemDao with an attached configuration
     */
    public ItemDao(Configuration configuration) {
        super(JItem.ITEM, Item.class, configuration);
    }

    @Override
    public Long getId(Item object) {
        return object.getItemId();
    }

    /**
     * Fetch records that have <code>item_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJItemId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JItem.ITEM.ITEM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>item_id IN (values)</code>
     */
    public List<Item> fetchByJItemId(Long... values) {
        return fetch(JItem.ITEM.ITEM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>item_id = value</code>
     */
    public Item fetchOneByJItemId(Long value) {
        return fetchOne(JItem.ITEM.ITEM_ID, value);
    }

    /**
     * Fetch a unique record that has <code>item_id = value</code>
     */
    public Optional<Item> fetchOptionalByJItemId(Long value) {
        return fetchOptional(JItem.ITEM.ITEM_ID, value);
    }

    /**
     * Fetch records that have <code>item_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJItemName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JItem.ITEM.ITEM_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>item_name IN (values)</code>
     */
    public List<Item> fetchByJItemName(String... values) {
        return fetch(JItem.ITEM.ITEM_NAME, values);
    }

    /**
     * Fetch records that have <code>item_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJItemPrice(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JItem.ITEM.ITEM_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>item_price IN (values)</code>
     */
    public List<Item> fetchByJItemPrice(Long... values) {
        return fetch(JItem.ITEM.ITEM_PRICE, values);
    }

    /**
     * Fetch records that have <code>discount_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJDiscountPrice(String lowerInclusive, String upperInclusive) {
        return fetchRange(JItem.ITEM.DISCOUNT_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>discount_price IN (values)</code>
     */
    public List<Item> fetchByJDiscountPrice(String... values) {
        return fetch(JItem.ITEM.DISCOUNT_PRICE, values);
    }

    /**
     * Fetch records that have <code>total_quantity BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJTotalQuantity(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JItem.ITEM.TOTAL_QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_quantity IN (values)</code>
     */
    public List<Item> fetchByJTotalQuantity(Long... values) {
        return fetch(JItem.ITEM.TOTAL_QUANTITY, values);
    }

    /**
     * Fetch records that have <code>discount_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJDiscountDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(JItem.ITEM.DISCOUNT_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>discount_date IN (values)</code>
     */
    public List<Item> fetchByJDiscountDate(LocalDate... values) {
        return fetch(JItem.ITEM.DISCOUNT_DATE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JItem.ITEM.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<Item> fetchByJCreatedAt(LocalDateTime... values) {
        return fetch(JItem.ITEM.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>last_modified_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Item> fetchRangeOfJLastModifiedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JItem.ITEM.LAST_MODIFIED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modified_at IN (values)</code>
     */
    public List<Item> fetchByJLastModifiedAt(LocalDateTime... values) {
        return fetch(JItem.ITEM.LAST_MODIFIED_AT, values);
    }
}
