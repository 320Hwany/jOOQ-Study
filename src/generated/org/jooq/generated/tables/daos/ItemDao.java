/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Item;
import org.jooq.generated.tables.records.ItemRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemDao extends DAOImpl<ItemRecord, org.jooq.generated.tables.pojos.Item, Long> {

    /**
     * Create a new ItemDao without any configuration
     */
    public ItemDao() {
        super(Item.ITEM, org.jooq.generated.tables.pojos.Item.class);
    }

    /**
     * Create a new ItemDao with an attached configuration
     */
    public ItemDao(Configuration configuration) {
        super(Item.ITEM, org.jooq.generated.tables.pojos.Item.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.Item object) {
        return object.getItemId();
    }

    /**
     * Fetch records that have <code>item_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfItemId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Item.ITEM.ITEM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>item_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByItemId(Long... values) {
        return fetch(Item.ITEM.ITEM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>item_id = value</code>
     */
    public org.jooq.generated.tables.pojos.Item fetchOneByItemId(Long value) {
        return fetchOne(Item.ITEM.ITEM_ID, value);
    }

    /**
     * Fetch a unique record that has <code>item_id = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Item> fetchOptionalByItemId(Long value) {
        return fetchOptional(Item.ITEM.ITEM_ID, value);
    }

    /**
     * Fetch records that have <code>item_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfItemName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Item.ITEM.ITEM_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>item_name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByItemName(String... values) {
        return fetch(Item.ITEM.ITEM_NAME, values);
    }

    /**
     * Fetch records that have <code>item_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfItemPrice(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Item.ITEM.ITEM_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>item_price IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByItemPrice(Long... values) {
        return fetch(Item.ITEM.ITEM_PRICE, values);
    }

    /**
     * Fetch records that have <code>discount_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfDiscountPrice(String lowerInclusive, String upperInclusive) {
        return fetchRange(Item.ITEM.DISCOUNT_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>discount_price IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByDiscountPrice(String... values) {
        return fetch(Item.ITEM.DISCOUNT_PRICE, values);
    }

    /**
     * Fetch records that have <code>total_quantity BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfTotalQuantity(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Item.ITEM.TOTAL_QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_quantity IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByTotalQuantity(Long... values) {
        return fetch(Item.ITEM.TOTAL_QUANTITY, values);
    }

    /**
     * Fetch records that have <code>discount_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfDiscountDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Item.ITEM.DISCOUNT_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>discount_date IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByDiscountDate(LocalDate... values) {
        return fetch(Item.ITEM.DISCOUNT_DATE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Item.ITEM.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Item.ITEM.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>last_modified_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchRangeOfLastModifiedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Item.ITEM.LAST_MODIFIED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modified_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Item> fetchByLastModifiedAt(LocalDateTime... values) {
        return fetch(Item.ITEM.LAST_MODIFIED_AT, values);
    }
}
