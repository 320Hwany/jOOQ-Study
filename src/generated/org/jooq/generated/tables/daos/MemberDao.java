/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JMember;
import org.jooq.generated.tables.pojos.Member;
import org.jooq.generated.tables.records.MemberRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberDao extends DAOImpl<MemberRecord, Member, Long> {

    /**
     * Create a new MemberDao without any configuration
     */
    public MemberDao() {
        super(JMember.MEMBER, Member.class);
    }

    /**
     * Create a new MemberDao with an attached configuration
     */
    public MemberDao(Configuration configuration) {
        super(JMember.MEMBER, Member.class, configuration);
    }

    @Override
    public Long getId(Member object) {
        return object.getMemberId();
    }

    /**
     * Fetch records that have <code>member_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Member> fetchRangeOfJMemberId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JMember.MEMBER.MEMBER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_id IN (values)</code>
     */
    public List<Member> fetchByJMemberId(Long... values) {
        return fetch(JMember.MEMBER.MEMBER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>member_id = value</code>
     */
    public Member fetchOneByJMemberId(Long value) {
        return fetchOne(JMember.MEMBER.MEMBER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>member_id = value</code>
     */
    public Optional<Member> fetchOptionalByJMemberId(Long value) {
        return fetchOptional(JMember.MEMBER.MEMBER_ID, value);
    }

    /**
     * Fetch records that have <code>login_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Member> fetchRangeOfJLoginId(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMember.MEMBER.LOGIN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>login_id IN (values)</code>
     */
    public List<Member> fetchByJLoginId(String... values) {
        return fetch(JMember.MEMBER.LOGIN_ID, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Member> fetchRangeOfJPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMember.MEMBER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<Member> fetchByJPassword(String... values) {
        return fetch(JMember.MEMBER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Member> fetchRangeOfJUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(JMember.MEMBER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<Member> fetchByJUsername(String... values) {
        return fetch(JMember.MEMBER.USERNAME, values);
    }

    /**
     * Fetch records that have <code>money BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Member> fetchRangeOfJMoney(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JMember.MEMBER.MONEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>money IN (values)</code>
     */
    public List<Member> fetchByJMoney(Long... values) {
        return fetch(JMember.MEMBER.MONEY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Member> fetchRangeOfJCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JMember.MEMBER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<Member> fetchByJCreatedAt(LocalDateTime... values) {
        return fetch(JMember.MEMBER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>last_modified_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Member> fetchRangeOfJLastModifiedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JMember.MEMBER.LAST_MODIFIED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modified_at IN (values)</code>
     */
    public List<Member> fetchByJLastModifiedAt(LocalDateTime... values) {
        return fetch(JMember.MEMBER.LAST_MODIFIED_AT, values);
    }
}
