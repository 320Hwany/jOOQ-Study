/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Member;
import org.jooq.generated.tables.records.MemberRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberDao extends DAOImpl<MemberRecord, org.jooq.generated.tables.pojos.Member, Long> {

    /**
     * Create a new MemberDao without any configuration
     */
    public MemberDao() {
        super(Member.MEMBER, org.jooq.generated.tables.pojos.Member.class);
    }

    /**
     * Create a new MemberDao with an attached configuration
     */
    public MemberDao(Configuration configuration) {
        super(Member.MEMBER, org.jooq.generated.tables.pojos.Member.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.Member object) {
        return object.getMemberId();
    }

    /**
     * Fetch records that have <code>member_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchRangeOfMemberId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Member.MEMBER.MEMBER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchByMemberId(Long... values) {
        return fetch(Member.MEMBER.MEMBER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>member_id = value</code>
     */
    public org.jooq.generated.tables.pojos.Member fetchOneByMemberId(Long value) {
        return fetchOne(Member.MEMBER.MEMBER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>member_id = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Member> fetchOptionalByMemberId(Long value) {
        return fetchOptional(Member.MEMBER.MEMBER_ID, value);
    }

    /**
     * Fetch records that have <code>login_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchRangeOfLoginId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Member.MEMBER.LOGIN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>login_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchByLoginId(String... values) {
        return fetch(Member.MEMBER.LOGIN_ID, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Member.MEMBER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchByPassword(String... values) {
        return fetch(Member.MEMBER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Member.MEMBER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchByUsername(String... values) {
        return fetch(Member.MEMBER.USERNAME, values);
    }

    /**
     * Fetch records that have <code>money BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchRangeOfMoney(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Member.MEMBER.MONEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>money IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchByMoney(Long... values) {
        return fetch(Member.MEMBER.MONEY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Member.MEMBER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Member.MEMBER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>last_modified_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchRangeOfLastModifiedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Member.MEMBER.LAST_MODIFIED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modified_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Member> fetchByLastModifiedAt(LocalDateTime... values) {
        return fetch(Member.MEMBER.LAST_MODIFIED_AT, values);
    }
}
